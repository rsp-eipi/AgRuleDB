<?xml version="1.0" encoding="UTF-8"?>
<schema xmlns="http://purl.oclc.org/dsdl/schematron"
		xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
        xmlns:doc="http://doc"
        queryBinding="xslt2">
   <ns uri="urn:gs1:gdsn:catalogue_item_confirmation:xsd:3"
       prefix="catalogue_item_confirmation"/>
   <ns uri="http://www.unece.org/cefact/namespaces/StandardBusinessDocumentHeader"
       prefix="sh"/>
   <ns uri="http://data" prefix="data"/> 
   <let name="gpc" value="doc('../data/data.xml')//data:gpc"/>    
   <pattern>
      <title>Rule FR_320</title>
       <doc:description>If one iteration of targetMarketCountryCode equals '250' (France) and gpcCategoryCode belongs to ('10000601', '10000599', 
'10000211', '10000315', '10000314', '10000319', '10000316', '10000203', '10000600', '10000287', '10000285', '10000284', '10000286', '10006250', '10000003', '10000002', '10006866', '10005882', '10005886', '10006345', '10005884', '10005885', '10005883', '10006438', '10006440', '10006441', '10005887', '10005880', '10006343', '10006439', '10005889', '10005877', '10005878', '10005876', '10005879', '10005881', '10005888', '10006442', '10005935', '10006433', '10005939', '10005941', '10005942', '10005940', '10006168', '10006169', '10006167', '10006431', '10006347', '10006429', '10006832', '10006759', '10006354', '10005929', '10006194', '10005934', '10005921', '10005922', '10005927', '10006193', '10005932', '10005930', '10006430', '10005923', '10005924', '10006346', '10005928', '10005925', '10005918', '10006432', '10005895', '10005899', '10005897', '10005896', '10005898', '10006172', '10006831', '10005905', 
'10005907', '10005908', '10005909', '10005916', '10005910', '10005911', '10006443', '10005912', '10005915', '10005917', '10005914', '10005913', '10006415', '10006173', '10005901', '10006414', '10005903', '10005902', '10005900', '10006338', '10005949', '10005950', '10005953', '10005951', '10005952', '10005973', '10005963', '10005961', '10006437', '10005959', '10005972', '10006160', '10005960', '10005967', '10005971', '10005970', '10005974', '10006434', '10005964', '10006435', '10005968', '10005969', '10005965', '10005966', '10006436', '10005948', '10005946', '10005938', '10005937', '10005955', '10005954', '10005956', '10005957', '10000605', '10000206', '10000205', '10000204', '10000604', '10000207', '10000272', '10000271', '10000270', '10000236', '10000235', '10000042', '10000585', '10006958', '10000040', '10000006', '10000005', '10006171', '10005986', '10006148', '10006337', '10006147', '10006371', 
'10006372', '10006035', '10006263', '10006157', '10006836', '10006266', '10006033', '10006264', '10006032', '10006265', '10006031', '10006034', '10006036', '10005988', '10006823', '10006445', '10006446', '10006197', '10005999', '10006000', '10006145', '10005996', '10006143', '10006144', '10005987', '10006146', '10005997', '10006117', '10006444', '10006341', '10006339', '10006342', '10006116', '10006118', '10006120', '10006119', '10006196', '10006447', '10006450', '10006014', '10006449', '10006357', '10006356', '10006355', '10006015', '10006349', '10006340', '10006038', '10006261', '10006824', '10006361', '10006362', '10006158', '10005980', '10006834', '10005982', '10005979', '10005976', '10006336', '10005981', '10006359', '10006040', '10006049', '10006050', '10006334', '10006071', '10006044', '10006456', '10006041', '10006047', '10006056', '10006457', '10006053', '10006065', '10006074', '10006061',
 '10006159', '10006054', '10008004', '10006055', '10006051', '10008003', '10006052', '10006077', '10006058', '10006057', '10006059', '10006060', '10006063', '10006066', '10008005', '10006199', '10006198', '10008002', '10006072', '10006045', '10006046', '10006353', '10006076', '10006075', '10006078', '10006003', '10006004', '10006005', '10006009', '10006007', '10006006', '10006130', '10006129', '10006135', '10006131', '10006136', '10006272', '10006133', '10006137', '10006134', '10006835', '10006458', '10006459', '10006262', '10006460', '10006461', '10006335', '10006121', '10006967', '10006122', '10006123', '10006418', '10006966', '10006113', '10006833', '10006112', '10006344', '10006110', '10006109', '10006108', '10006416', '10006351', '10006968', '10006366', '10006126', '10006111', '10006104', '10006363', '10006127', '10006114', '10006417', '10006115', '10006124', '10006364', '10006367', '10006200', 
 '10006107', '10006125', '10006348', '10006350', '10006830', '10006829', '10006828', '10006826', '10006827', '10006037', '10006260', '10006259', '10006455', '10006270', '10006454', '10005984', '10006825', '10005985', '10006271', '10006195', '10006102', '10006100', '10006190', '10006191', '10006192', '10006365', '10006370', '10006369', '10006368', '10006452', '10006128', '10006760', '10006453', '10006358', '10006451', '10006360', '10006164', '10006163', '10006165', '10006166', '10006161', '10006162', '10006420', '10006352', '10006427', '10006091', '10006048', '10006269', '10006086', '10006090', '10006089', '10006092', '10006088', '10006095', '10006093', '10006422', '10006423', '10006097', '10006094', '10006421', '10006155', '10006268', '10006425', 10006424', '10006426', '10006428', '10006761', '10006079', '10006267', '10006419', '10006085', '10000007', '10000008', '10000242', '10000317', '10000318', 
 '10000241', '10000240', '10006219' or '10000296') and claimMarkedOnPackage equals 'TRUE' then nutritionalClaimNutrientElementCode SHALL equal ('PESTICIDE' or 'PESTICIDE_RESIDUES') and nutritionalClaimTypeCode SHALL be used</doc:description>
       <doc:attribute1>targetMarketCountryCode,gpcCategoryCode,claimMarkedOnPackage</doc:attribute1>
       <doc:attribute2>nutritionalClaimNutrientElementCode,nutritionalClaimTypeCode</doc:attribute2>
       <rule context="nutritionalClaimDetail">
          <assert test="if((ancestor::tradeItem/targetMarket/targetMarketCountryCode = '250')
         				 	and (claimMarkedOnPackage = 'TRUE')                                                                    									 					
        					and (ancestor::tradeItem/gdsnTradeItemClassification/gpcCategoryCode =   ('10000601', '10000599', '10000211', '10000315', '10000314', '10000319', '10000316', 
        					'10000203', '10000600', '10000287', '10000285', '10000284', '10000286', '10006250', '10000003', '10000002', '10006866', '10005882', '10005886', '10006345',
        					'10005884', '10005885', '10005883', '10006438', '10006440', '10006441', '10005887', '10005880', '10006343', '10006439', '10005889', '10005877', '10005878',
        					'10005876', '10005879', '10005881', '10005888', '10006442', '10005935', '10006433', '10005939', '10005941', '10005942', '10005940', '10006168', '10006169', 
        					'10006167', '10006431', '10006347', '10006429', '10006832', '10006759', '10006354', '10005929', '10006194', '10005934', '10005921', '10005922', '10005927',
        					'10006193', '10005932', '10005930', '10006430', '10005923', '10005924', '10006346', '10005928', '10005925', '10005918', '10006432', '10005895', '10005899',
        					'10005897', '10005896', '10005898', '10006172', '10006831', '10005905', '10005907', '10005908', '10005909', '10005916', '10005910', '10005911', '10006443', 
        					'10005912', '10005915', '10005917', '10005914', '10005913', '10006415', '10006173', '10005901', '10006414', '10005903', '10005902', '10005900', '10006338',
        					'10005949', '10005950', '10005953', '10005951', '10005952', '10005973', '10005963', '10005961', '10006437', '10005959', '10005972', '10006160', '10005960',
        					'10005967', '10005971', '10005970', '10005974', '10006434', '10005964', '10006435', '10005968', '10005969', '10005965', '10005966', '10006436', '10005948', 
        					'10005946', '10005938', '10005937', '10005955', '10005954', '10005956', '10005957', '10000605', '10000206', '10000205', '10000204', '10000604', '10000207', 
        					'10000272', '10000271', '10000270', '10000236', '10000235', '10000042', '10000585', '10006958', '10000040', '10000006', '10000005', '10006171', '10005986', 
        					'10006148', '10006337', '10006147', '10006371', '10006372', '10006035', '10006263', '10006157', '10006836', '10006266', '10006033', '10006264', '10006032', 
        					'10006265', '10006031', '10006034', '10006036', '10005988', '10006823', '10006445', '10006446', '10006197', '10005999', '10006000', '10006145', '10005996', 
        					'10006143', '10006144', '10005987', '10006146', '10005997', '10006117', '10006444', '10006341', '10006339', '10006342', '10006116', '10006118', '10006120',
        					'10006119', '10006196', '10006447', '10006450', '10006014', '10006449', '10006357', '10006356', '10006355', '10006015', '10006349', '10006340', '10006038', 
        					'10006261', '10006824', '10006361', '10006362', '10006158', '10005980', '10006834', '10005982', '10005979', '10005976', '10006336', '10005981', '10006359', 
        					'10006040', '10006049', '10006050', '10006334', '10006071', '10006044', '10006456', '10006041', '10006047', '10006056', '10006457', '10006053', '10006065',
        					'10006074', '10006061', '10006159', '10006054', '10008004', '10006055', '10006051', '10008003', '10006052', '10006077', '10006058', '10006057', '10006059',
        					'10006060', '10006063', '10006066', '10008005', '10006199', '10006198', '10008002', '10006072', '10006045', '10006046', '10006353', '10006076', '10006075', 
        					'10006078', '10006003', '10006004', '10006005', '10006009', '10006007', '10006006', '10006130', '10006129', '10006135', '10006131', '10006136', '10006272',
        					'10006133', '10006137', '10006134', '10006835', '10006458', '10006459', '10006262', '10006460', '10006461', '10006335', '10006121', '10006967', '10006122', 
        					'10006123', '10006418', '10006966', '10006113', '10006833', '10006112', '10006344', '10006110', '10006109', '10006108', '10006416', '10006351', '10006968', 
        					'10006366', '10006126', '10006111', '10006104', '10006363', '10006127', '10006114', '10006417', '10006115', '10006124', '10006364', '10006367', '10006200',
        					'10006107', '10006125', '10006348', '10006350', '10006830', '10006829', '10006828', '10006826', '10006827', '10006037', '10006260', '10006259', '10006455', 
        					'10006270', '10006454', '10005984', '10006825', '10005985', '10006271', '10006195', '10006102', '10006100', '10006190', '10006191', '10006192', '10006365', 
        					'10006370', '10006369', '10006368', '10006452', '10006128', '10006760', '10006453', '10006358', '10006451', '10006360', '10006164', '10006163', '10006165', 
        					'10006166', '10006161', '10006162', '10006420', '10006352', '10006427', '10006091', '10006048', '10006269', '10006086', '10006090', '10006089', '10006092',
        					'10006088', '10006095', '10006093', '10006422', '10006423', '10006097', '10006094', '10006421', '10006155', '10006268', '10006425', '10006424', '10006426',
        					'10006428', '10006761', '10006079', '10006267', '10006419', '10006085', '10000007', '10000008', '10000242', '10000317', '10000318', '10000241', '10000240', 
        					'10006219' , '10000296')))	 
                      		then ((nutritionalClaimNutrientElementCode = ('PESTICIDE' , 'PESTICIDE_RESIDUES'))
                      		and (nutritionalClaimTypeCode != ''))   			    					 
          				  
          					else true()">
          	 
          	 	
		          	 	       <errorMessage>Pour le marché cible France, pour les produits appartenant aux briques GPC concernées, si les allégations marquées sur l'emballage sont égales à vrai alors le nutriment associé à l'allégation nutritionnel doit être renseigné avec la valeur pesticide ou résidus de pesticides et le type d'allégation nutritionnel est obligatoire.</errorMessage>
				           
					           <location>
														<!-- Fichier SDBH -->
														<messageId><xsl:value-of select="/*/sh:StandardBusinessDocumentHeader/sh:DocumentIdentification/sh:InstanceIdentifier"/></messageId>
														<messageOwner><xsl:value-of select="/*/sh:StandardBusinessDocumentHeader/sh:Sender/sh:Identifier"/></messageOwner>
																			
														<transactionId><xsl:value-of select="ancestor::transaction/transactionIdentification/entityIdentification"/></transactionId>
														<transactionOwner><xsl:value-of select="ancestor::transaction/transactionIdentification/contentOwner/gln"/></transactionOwner>
														<commandId><xsl:value-of select="ancestor::documentCommand/documentCommandHeader/documentCommandIdentification/entityIdentification"/></commandId>
														<commandOwner><xsl:value-of select="ancestor::documentCommand/documentCommandHeader/documentCommandIdentification/contentOwner/gln"/></commandOwner>
														<!-- Fichier CIN -->
														<documentId><xsl:value-of select="ancestor::*:catalogueItemNotification/catalogueItemNotificationIdentification/entityIdentification"/></documentId>
														<documentOwner><xsl:value-of select="ancestor::*:catalogueItemNotification/catalogueItemNotificationIdentification/contentOwner/gln"/></documentOwner>
														<!--  Le 1er tradeItem . 1 seul car les autres sont imbriqués -->
														<gtinHigh><xsl:value-of select="ancestor::*:catalogueItemNotification/catalogueItem/tradeItem/gtin"/></gtinHigh>
														<!-- Context = TradeItem -->
														<gtin><xsl:value-of select="ancestor::tradeItem/gtin"/></gtin>
														<glnProvider><xsl:value-of select="ancestor::tradeItem/informationProviderOfTradeItem/gln"/></glnProvider>
														<targetMarket><xsl:value-of select="ancestor::tradeItem/targetMarket/targetMarketCountryCode"/></targetMarket>	
														
							  </location>	 
  	 	  </assert>
      </rule>
   </pattern>
</schema>
